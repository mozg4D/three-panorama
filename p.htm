<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
<style>.ico{position:absolute}.ico:hover{border:2px solid #fff;margin:-2px} canvas{touch-action:none}</style>
<body id="LinksBody" style="margin:0;overflow:hidden;cursor:pointer;user-select:none">
<svg style="right:7;top:7;width:32;height:32" onclick="fs()" class="ico"><path style="stroke:#ddd;fill:#fff" d="M0.5,0.5 31.5,0.5 31.5,31.5 0.5,31.5Z"></path>
<path style="stroke:#000;fill:none" d="M6,12 v-6 h6 M20,6 h6 v6 M26,20 v6 h-6 M12,26 h-6 v-6"></path></svg>
<script src="three.js"></script>

<script> mouseIsDown=false
alpha=beta=0;
ww=window.innerWidth;wh=window.innerHeighty

scene = new THREE.Scene()
renderer = new THREE.WebGLRenderer()
renderer.setSize(ww, wh)

camera = new THREE.PerspectiveCamera( Math.min( 50 + 20*wh/ww, 90 ), ww/wh, 1, 20)
camera.rotation.order = 'YXZ'

plane = new THREE.PlaneGeometry( 10, 10 )
p1 = new THREE.Mesh( plane, new THREE.MeshBasicMaterial( {map: new THREE.TextureLoader().load( '1f1.jpg', ()=>{renderer.render( scene, camera )})})); p1.position.z = -5; scene.add( p1 )
p2 = new THREE.Mesh( plane, new THREE.MeshBasicMaterial( {map: new THREE.TextureLoader().load( '1r1.jpg', ()=>{renderer.render( scene, camera )})})); p2.position.x =  5; p2.rotation.y = -Math.PI/2; scene.add( p2 )
p3 = new THREE.Mesh( plane, new THREE.MeshBasicMaterial( {map: new THREE.TextureLoader().load( '1b1.jpg', ()=>{renderer.render( scene, camera )})})); p3.position.z =  5; p3.rotation.y =  Math.PI  ; scene.add( p3 )
p4 = new THREE.Mesh( plane, new THREE.MeshBasicMaterial( {map: new THREE.TextureLoader().load( '1l1.jpg', ()=>{renderer.render( scene, camera )})})); p4.position.x = -5; p4.rotation.y =  Math.PI/2; scene.add( p4 )
p5 = new THREE.Mesh( plane, new THREE.MeshBasicMaterial( {map: new THREE.TextureLoader().load( '1d1.jpg', ()=>{renderer.render( scene, camera )})})); p5.position.y = -5; p5.rotation.set(-Math.PI/2, 0,  Math.PI/2); scene.add( p5 )
p6 = new THREE.Mesh( plane, new THREE.MeshBasicMaterial( {map: new THREE.TextureLoader().load( '1u1.jpg', ()=>{renderer.render( scene, camera )})})); p6.position.y =  5; p6.rotation.set( Math.PI/2, 0, -Math.PI/2); scene.add( p6 )

function rescale(){
    if(ww!=window.innerWidth || wh!=window.innerHeight) {ww=window.innerWidth; wh=window.innerHeight
    renderer.setSize(ww, wh)
    camera.aspect = ww / wh
    camera.fov = Math.min( 50 + 20*wh/ww, 90 )
    camera.updateProjectionMatrix()
    renderer.render( scene, camera )}}

setInterval( rescale, 150)

document.body.appendChild(renderer.domElement)

onmousedown = (e)=>{mouseIsDown=true; x_coord=e.clientX; y_coord=e.clientY}
ontouchstart = (e)=>{mouseIsDown=true; x_coord=e.touches[0].clientX; y_coord=e.touches[0].clientY}
onmouseup = ()=>{mouseIsDown=false}
onmousemove = (e)=>{if(mouseIsDown){alpha -= (x_coord-e.clientX)/600; beta -= (y_coord-e.clientY)/600; rotateCam(); x_coord=e.clientX; y_coord=e.clientY}}
ontouchmove = (e)=>{if(mouseIsDown){alpha -= (x_coord-e.touches[0].clientX)/300; beta -= (y_coord-e.touches[0].clientY)/400; rotateCam(); x_coord=e.touches[0].clientX; y_coord=e.touches[0].clientY}}

function rotateCam(){
    if(beta> 1.57) beta= 1.57
    if(beta<-1.57) beta=-1.57
    camera.rotation.set(beta, alpha, 0)
    renderer.render( scene, camera )}

fss=false; function fs(){fss=!fss; fss ? LinksBody.requestFullscreen() : document.exitFullscreen()}
</script></body>